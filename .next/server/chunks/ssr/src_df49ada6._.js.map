{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/garage-copied/src/components/shared/page-header.tsx"],"sourcesContent":["\nimport { cn } from '@/lib/utils';\n\ninterface PageHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  title: string;\n  description?: string;\n}\n\nexport function PageHeader({ title, description, children, className, ...props }: PageHeaderProps) {\n  return (\n    <div className={cn(\"flex items-center justify-between space-y-2\", className)} {...props}>\n      <div>\n        <h2 className=\"text-3xl font-bold tracking-tight font-headline\">{title}</h2>\n        {description && <p className=\"text-muted-foreground\">{description}</p>}\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        {children}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;AAOO,SAAS,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,OAAwB;IAC/F,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,+CAA+C;QAAa,GAAG,KAAK;;0BACrF,8OAAC;;kCACC,8OAAC;wBAAG,WAAU;kCAAmD;;;;;;oBAChE,6BAAe,8OAAC;wBAAE,WAAU;kCAAyB;;;;;;;;;;;;0BAExD,8OAAC;gBAAI,WAAU;0BACZ;;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///home/user/garage-copied/src/components/ui/card.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLHeadingElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///home/user/garage-copied/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///home/user/garage-copied/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAEA;AACA;AASA;AACA;AAfA;;;;;;;AAiBA,MAAM,OAAO,8JAAA,CAAA,eAAY;AASzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,gBAAmB,AAAD,EACzC,CAAC;AAGH,MAAM,YAAY,CAGhB,EACA,GAAG,OACkC;IACrC,qBACE,8OAAC,iBAAiB,QAAQ;QAAC,OAAO;YAAE,MAAM,MAAM,IAAI;QAAC;kBACnD,cAAA,8OAAC,8JAAA,CAAA,aAAU;YAAE,GAAG,KAAK;;;;;;;;;;;AAG3B;AAEA,MAAM,eAAe;IACnB,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE;IACtC,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE;IACrC,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,iBAAc,AAAD;IAElD,MAAM,aAAa,cAAc,aAAa,IAAI,EAAE;IAEpD,IAAI,CAAC,cAAc;QACjB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,EAAE,EAAE,GAAG;IAEf,OAAO;QACL;QACA,MAAM,aAAa,IAAI;QACvB,YAAY,GAAG,GAAG,UAAU,CAAC;QAC7B,mBAAmB,GAAG,GAAG,sBAAsB,CAAC;QAChD,eAAe,GAAG,GAAG,kBAAkB,CAAC;QACxC,GAAG,UAAU;IACf;AACF;AAMA,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,gBAAmB,AAAD,EACxC,CAAC;AAGH,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,MAAM,KAAK,CAAA,GAAA,qMAAA,CAAA,QAAW,AAAD;IAErB,qBACE,8OAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;QAAG;kBACpC,cAAA,8OAAC;YAAI,KAAK;YAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;YAAa,GAAG,KAAK;;;;;;;;;;;AAGrE;AACA,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG;IAE9B,qBACE,8OAAC,iIAAA,CAAA,QAAK;QACJ,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,SAAS,oBAAoB;QAC3C,SAAS;QACR,GAAG,KAAK;;;;;;AAGf;AACA,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,GAAG,OAAO,EAAE;IACf,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG;IAEhE,qBACE,8OAAC,gKAAA,CAAA,OAAI;QACH,KAAK;QACL,IAAI;QACJ,oBACE,CAAC,QACG,GAAG,mBAAmB,GACtB,GAAG,kBAAkB,CAAC,EAAE,eAAe;QAE7C,gBAAc,CAAC,CAAC;QACf,GAAG,KAAK;;;;;;AAGf;AACA,YAAY,WAAW,GAAG;AAE1B,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,MAAM,EAAE,iBAAiB,EAAE,GAAG;IAE9B,qBACE,8OAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AACA,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACpC,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG;IACjC,MAAM,OAAO,QAAQ,OAAO,OAAO,WAAW,MAAM;IAEpD,IAAI,CAAC,MAAM;QACT,OAAO;IACT;IAEA,qBACE,8OAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,wCAAwC;QACrD,GAAG,KAAK;kBAER;;;;;;AAGP;AACA,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file:///home/user/garage-copied/src/ai/flows/driver-behavior-insights.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview An AI agent for analyzing driver behavior.\n *\n * - analyzeDriverBehavior - A function that handles the driver behavior analysis.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { \n    DriverBehaviorInputSchema,\n    DriverBehaviorOutputSchema,\n    type DriverBehaviorInput,\n    type DriverBehaviorOutput\n} from '@/ai/schemas';\n\nconst prompt = ai.definePrompt({\n  name: 'driverBehaviorInsightsPrompt',\n  input: { schema: DriverBehaviorInputSchema },\n  output: { schema: DriverBehaviorOutputSchema },\n  prompt: `You are an AI expert in fleet management and driver safety.\n  \n  Analyze the following driver metrics to calculate a Safety Score and a Fuel Efficiency Score. \n  Also, generate a list of actionable insights to help the driver improve.\n\n  Driver ID: {{{driverId}}}\n  Speeding Incidents: {{{speedingIncidents}}}\n  Harsh Braking Events: {{{harshBrakingEvents}}}\n  Idling Time (minutes): {{{idlingTimeMinutes}}}\n  Fuel Consumption (liters): {{{fuelConsumptionLiters}}}\n\n  - The Safety Score should primarily be based on speeding and harsh braking. More incidents mean a lower score.\n  - The Fuel Efficiency Score should be based on idling time and fuel consumption relative to typical usage. More idling and consumption mean a lower score.\n  - The insights should be specific, a list of actionable insights for the driver to improve. For example, \"Try to reduce idling time to save fuel.\"\n  `,\n});\n\n\nconst driverBehaviorInsightsFlow = ai.defineFlow(\n  {\n    name: 'driverBehaviorInsightsFlow',\n    inputSchema: DriverBehaviorInputSchema,\n    outputSchema: DriverBehaviorOutputSchema,\n  },\n  async (input) => {\n    const { output } = await prompt(input);\n    return output!;\n  }\n);\n\nexport async function analyzeDriverBehavior(input: DriverBehaviorInput): Promise<DriverBehaviorOutput> {\n  return driverBehaviorInsightsFlow(input);\n}\n"],"names":[],"mappings":";;;;;;IAkDsB,wBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 343, "column": 0}, "map": {"version":3,"sources":["file:///home/user/garage-copied/src/ai/schemas.ts"],"sourcesContent":["import { z } from 'zod';\n\n// Schema for Predictive Maintenance\nexport const PredictiveMaintenanceInputSchema = z.object({\n  vehicleId: z.string().describe('The unique identifier for the vehicle.'),\n  mileage: z.number().describe('The current mileage of the vehicle.'),\n  lastServiceDate: z\n    .string()\n    .describe('The date of the last service (YYYY-MM-DD).'),\n  sensorReadings: z\n    .string()\n    .describe('A summary of sensor readings (e.g., tire pressure, engine temp).'),\n  serviceHistory: z.string().describe('A summary of past service records.').optional(),\n  driverBehaviorSummary: z\n    .string()\n    .describe(\"A summary of the driver's habits (e.g., frequent hard braking).\")\n    .optional(),\n});\nexport type PredictiveMaintenanceInput = z.infer<\n  typeof PredictiveMaintenanceInputSchema\n>;\n\nexport const PredictiveMaintenanceOutputSchema = z.object({\n  predictions: z.array(\n    z.object({\n      potentialIssue: z\n        .string()\n        .describe('The potential issue that might occur (e.g., Brake Pad Wear).'),\n      recommendedAction: z\n        .string()\n        .describe('The recommended maintenance action to perform.'),\n      riskScore: z\n        .number()\n        .min(0)\n        .max(100)\n        .describe(\n          'A risk score from 0-100 indicating the likelihood and severity.'\n        ),\n      preventativeCost: z\n        .number()\n        .describe('The estimated cost to perform the maintenance preventatively.'),\n      potentialFailureCost: z\n        .number()\n        .describe('The estimated cost if the component fails.'),\n    })\n  ),\n});\nexport type PredictiveMaintenanceOutput = z.infer<\n  typeof PredictiveMaintenanceOutputSchema\n>;\n\n// Schema for Driver Behavior Analysis\nexport const DriverBehaviorInputSchema = z.object({\n  driverId: z.string().describe('The unique identifier for the driver.'),\n  speedingIncidents: z\n    .number()\n    .describe('The number of speeding incidents this month.'),\n  harshBrakingEvents: z\n    .number()\n    .describe('The number of harsh braking events this month.'),\n  idlingTimeMinutes: z\n    .number()\n    .describe('Total idling time in minutes this month.'),\n  fuelConsumptionLiters: z\n    .number()\n    .describe('Total fuel consumption in liters this month.'),\n});\nexport type DriverBehaviorInput = z.infer<typeof DriverBehaviorInputSchema>;\n\nexport const DriverBehaviorOutputSchema = z.object({\n  safetyScore: z.number().min(0).max(100).describe('A safety score from 0 to 100.'),\n  fuelEfficiencyScore: z\n    .number()\n    .min(0)\n    .max(100)\n    .describe('A fuel efficiency score from 0 to 100.'),\n  insights: z\n    .array(z.string())\n    .describe('A list of actionable insights for the driver to improve.'),\n});\nexport type DriverBehaviorOutput = z.infer<typeof DriverBehaviorOutputSchema>;\n\n// Schema for Customer Support Chatbot\nexport const CustomerSupportInputSchema = z.object({\n  customerId: z.string().describe('The unique identifier for the customer.'),\n  customerName: z.string().describe(\"The customer's name.\"),\n  message: z.string().describe(\"The customer's message or query.\"),\n  complaints: z\n    .string()\n    .describe(\"A JSON string of the customer's recent service tickets.\"),\n  invoices: z\n    .string()\n    .describe(\"A JSON string of the customer's recent invoices.\"),\n  amc: z\n    .string()\n    .describe(\n      \"A JSON string of the customer's Annual Maintenance Contract details. Can be null.\"\n    ),\n});\nexport type CustomerSupportInput = z.infer<typeof CustomerSupportInputSchema>;\n\nexport const CustomerSupportOutputSchema = z.object({\n  response: z.string().describe(\"The chatbot's response to the customer.\"),\n});\nexport type CustomerSupportOutput = z.infer<typeof CustomerSupportOutputSchema>;\n\n// Schema for Data Analysis\nexport const DataAnalysisInputSchema = z.object({\n  datasetName: z\n    .string()\n    .describe(\n      'The name of the dataset being analyzed (e.g., \"Service Tickets\", \"Inventory Parts\").'\n    ),\n  dataJson: z.string().describe('The dataset to analyze, provided as a JSON string.'),\n});\nexport type DataAnalysisInput = z.infer<typeof DataAnalysisInputSchema>;\n\nexport const DataAnalysisOutputSchema = z.object({\n  keyTrends: z\n    .array(z.string())\n    .describe('A list of the most significant trends or patterns discovered in the data.'),\n  anomalies: z\n    .array(z.string())\n    .describe('A list of any notable anomalies, outliers, or unexpected findings in the data.'),\n  actionableInsights: z\n    .array(z.string())\n    .describe('A list of actionable business insights or recommendations based on the analysis.'),\n  summary: z.string().describe('A brief, high-level summary of the findings.'),\n});\nexport type DataAnalysisOutput = z.infer<typeof DataAnalysisOutputSchema>;\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAGO,MAAM,mCAAmC,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvD,WAAW,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC7B,iBAAiB,oIAAA,CAAA,IAAC,CACf,MAAM,GACN,QAAQ,CAAC;IACZ,gBAAgB,oIAAA,CAAA,IAAC,CACd,MAAM,GACN,QAAQ,CAAC;IACZ,gBAAgB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC,sCAAsC,QAAQ;IAClF,uBAAuB,oIAAA,CAAA,IAAC,CACrB,MAAM,GACN,QAAQ,CAAC,mEACT,QAAQ;AACb;AAKO,MAAM,oCAAoC,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxD,aAAa,oIAAA,CAAA,IAAC,CAAC,KAAK,CAClB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACP,gBAAgB,oIAAA,CAAA,IAAC,CACd,MAAM,GACN,QAAQ,CAAC;QACZ,mBAAmB,oIAAA,CAAA,IAAC,CACjB,MAAM,GACN,QAAQ,CAAC;QACZ,WAAW,oIAAA,CAAA,IAAC,CACT,MAAM,GACN,GAAG,CAAC,GACJ,GAAG,CAAC,KACJ,QAAQ,CACP;QAEJ,kBAAkB,oIAAA,CAAA,IAAC,CAChB,MAAM,GACN,QAAQ,CAAC;QACZ,sBAAsB,oIAAA,CAAA,IAAC,CACpB,MAAM,GACN,QAAQ,CAAC;IACd;AAEJ;AAMO,MAAM,4BAA4B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,mBAAmB,oIAAA,CAAA,IAAC,CACjB,MAAM,GACN,QAAQ,CAAC;IACZ,oBAAoB,oIAAA,CAAA,IAAC,CAClB,MAAM,GACN,QAAQ,CAAC;IACZ,mBAAmB,oIAAA,CAAA,IAAC,CACjB,MAAM,GACN,QAAQ,CAAC;IACZ,uBAAuB,oIAAA,CAAA,IAAC,CACrB,MAAM,GACN,QAAQ,CAAC;AACd;AAGO,MAAM,6BAA6B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjD,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,QAAQ,CAAC;IACjD,qBAAqB,oIAAA,CAAA,IAAC,CACnB,MAAM,GACN,GAAG,CAAC,GACJ,GAAG,CAAC,KACJ,QAAQ,CAAC;IACZ,UAAU,oIAAA,CAAA,IAAC,CACR,KAAK,CAAC,oIAAA,CAAA,IAAC,CAAC,MAAM,IACd,QAAQ,CAAC;AACd;AAIO,MAAM,6BAA6B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjD,YAAY,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAChC,cAAc,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAClC,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC7B,YAAY,oIAAA,CAAA,IAAC,CACV,MAAM,GACN,QAAQ,CAAC;IACZ,UAAU,oIAAA,CAAA,IAAC,CACR,MAAM,GACN,QAAQ,CAAC;IACZ,KAAK,oIAAA,CAAA,IAAC,CACH,MAAM,GACN,QAAQ,CACP;AAEN;AAGO,MAAM,8BAA8B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClD,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAIO,MAAM,0BAA0B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9C,aAAa,oIAAA,CAAA,IAAC,CACX,MAAM,GACN,QAAQ,CACP;IAEJ,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAGO,MAAM,2BAA2B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,WAAW,oIAAA,CAAA,IAAC,CACT,KAAK,CAAC,oIAAA,CAAA,IAAC,CAAC,MAAM,IACd,QAAQ,CAAC;IACZ,WAAW,oIAAA,CAAA,IAAC,CACT,KAAK,CAAC,oIAAA,CAAA,IAAC,CAAC,MAAM,IACd,QAAQ,CAAC;IACZ,oBAAoB,oIAAA,CAAA,IAAC,CAClB,KAAK,CAAC,oIAAA,CAAA,IAAC,CAAC,MAAM,IACd,QAAQ,CAAC;IACZ,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B","debugId":null}},
    {"offset": {"line": 411, "column": 0}, "map": {"version":3,"sources":["file:///home/user/garage-copied/src/app/%28app%29/operations/drivers/page.tsx"],"sourcesContent":["\n\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport type { z } from 'zod';\nimport { PageHeader } from '@/components/shared/page-header';\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n} from '@/components/ui/card';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { analyzeDriverBehavior } from '@/ai/flows/driver-behavior-insights';\nimport {\n  DriverBehaviorInputSchema,\n  type DriverBehaviorOutput,\n} from '@/ai/schemas';\nimport { Loader2, Sparkles, Trophy, Fuel, Lightbulb } from 'lucide-react';\n\nconst formSchema = DriverBehaviorInputSchema;\nconst LOCAL_STORAGE_KEY = 'driverBehaviorForm';\n\n\nexport default function DriverBehaviorPage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [result, setResult] = useState<DriverBehaviorOutput | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      driverId: '',\n      speedingIncidents: 0,\n      harshBrakingEvents: 0,\n      idlingTimeMinutes: 0,\n      fuelConsumptionLiters: 0,\n    },\n  });\n\n  useEffect(() => {\n    try {\n        const savedData = localStorage.getItem(LOCAL_STORAGE_KEY);\n        if (savedData) {\n            const parsedData = JSON.parse(savedData);\n            // Ensure numeric fields are numbers\n            if(parsedData.speedingIncidents) parsedData.speedingIncidents = Number(parsedData.speedingIncidents || 0);\n            if(parsedData.harshBrakingEvents) parsedData.harshBrakingEvents = Number(parsedData.harshBrakingEvents || 0);\n            if(parsedData.idlingTimeMinutes) parsedData.idlingTimeMinutes = Number(parsedData.idlingTimeMinutes || 0);\n            if(parsedData.fuelConsumptionLiters) parsedData.fuelConsumptionLiters = Number(parsedData.fuelConsumptionLiters || 0);\n            form.reset(parsedData);\n        }\n    } catch (e) {\n        console.error(\"Failed to parse driver behavior form data from localStorage\", e);\n    }\n  }, [form]);\n\n  useEffect(() => {\n    const subscription = form.watch((value) => {\n      try {\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(value));\n      } catch(e) {\n        console.error(\"Failed to save driver behavior form data to localStorage\", e);\n      }\n    });\n    return () => subscription.unsubscribe();\n  }, [form]);\n\n  async function onSubmit(values: z.infer<typeof formSchema>) {\n    setIsLoading(true);\n    setError(null);\n    setResult(null);\n    try {\n      const res = await analyzeDriverBehavior(values);\n      setResult(res);\n      localStorage.removeItem(LOCAL_STORAGE_KEY);\n    } catch (e) {\n      setError(\n        'An error occurred while analyzing driver data. Please try again.'\n      );\n      console.error(e);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <div className=\"flex-1 space-y-4 p-4 pt-6 md:p-8\">\n      <PageHeader\n        title=\"Driver Behavior Analysis\"\n        description=\"Use AI to analyze driver metrics and get safety insights.\"\n      />\n      <div className=\"grid gap-8 md:grid-cols-2\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Driver Metrics</CardTitle>\n            <CardDescription>\n              Enter the monthly metrics for the driver.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Form {...form}>\n              <form\n                onSubmit={form.handleSubmit(onSubmit)}\n                className=\"space-y-4\"\n              >\n                <FormField\n                  control={form.control}\n                  name=\"driverId\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Driver ID</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"e.g., DRV-007\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"speedingIncidents\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Speeding Incidents</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"number\"\n                          {...field}\n                          onChange={(e) =>\n                            field.onChange(Number(e.target.value) || 0)\n                          }\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"harshBrakingEvents\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Harsh Braking Events</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"number\"\n                          {...field}\n                          onChange={(e) =>\n                            field.onChange(Number(e.target.value) || 0)\n                          }\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"idlingTimeMinutes\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Idling Time (minutes)</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"number\"\n                          {...field}\n                          onChange={(e) =>\n                            field.onChange(Number(e.target.value) || 0)\n                          }\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"fuelConsumptionLiters\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Fuel Consumption (Liters)</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"number\"\n                          {...field}\n                          onChange={(e) =>\n                            field.onChange(Number(e.target.value) || 0)\n                          }\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <Button type=\"submit\" disabled={isLoading}>\n                  {isLoading ? (\n                    <>\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                      Analyzing...\n                    </>\n                  ) : (\n                    <>\n                      <Sparkles className=\"mr-2 h-4 w-4\" />\n                      Generate Insights\n                    </>\n                  )}\n                </Button>\n              </form>\n            </Form>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>AI-Generated Report</CardTitle>\n            <CardDescription>\n              Scores and insights will appear here.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            {isLoading && (\n              <div className=\"flex h-64 items-center justify-center\">\n                <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n              </div>\n            )}\n            {error && <p className=\"text-destructive\">{error}</p>}\n            {result && (\n              <div className=\"space-y-6\">\n                <div className=\"grid grid-cols-2 gap-4 text-center\">\n                  <Card>\n                    <CardHeader className=\"pb-2\">\n                      <Trophy className=\"mx-auto h-8 w-8 text-primary\" />\n                      <CardTitle className=\"text-lg\">Safety Score</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <p className=\"text-4xl font-bold\">{result.safetyScore}</p>\n                    </CardContent>\n                  </Card>\n                  <Card>\n                    <CardHeader className=\"pb-2\">\n                      <Fuel className=\"mx-auto h-8 w-8 text-primary\" />\n                      <CardTitle className=\"text-lg\">\n                        Fuel Efficiency\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <p className=\"text-4xl font-bold\">\n                        {result.fuelEfficiencyScore}\n                      </p>\n                    </CardContent>\n                  </Card>\n                </div>\n                <div>\n                  <h4 className=\"mb-2 flex items-center text-lg font-semibold\">\n                    <Lightbulb className=\"mr-2 h-5 w-5 text-yellow-400\" />\n                    Actionable Insights\n                  </h4>\n                  <ul className=\"list-inside list-disc space-y-2 rounded-lg bg-secondary p-4\">\n                    {result.insights.map((insight, index) => (\n                      <li key={index}>{insight}</li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\n    "],"names":[],"mappings":"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","debugId":null}}]
}